name: Build

on:
  push:
    branches:
      - '*'

env:
  isNightly: ${{ contains(github.ref, 'dev') }}
  isFinalRelease: ${{ contains(github.ref, 'main') }}

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Setup APT repositories for ARM
      run: sudo mv sources.list /etc/apt/sources.list

    - name: Add ARM architecture to APT
      run: sudo dpkg --add-architecture armhf

    - name: Update APT repositories
      run: sudo apt update

    - name: Get uClibc toolchain
      uses: i3h/download-release-asset@v1
      with:
        owner: telmomarques
        repo: uClibc-toolchain
        tag: latest
        file: toolchain.tar

    - name: Install uClibc ARM cross compiler
      run: tar -xf toolchain.tar

    - name: Install dependencies
      run: sudo apt install -y build-essential flex bison byacc make m4 openssl:armhf libssl-dev:armhf liblz-dev:armhf liblz-dev zlib1g-dev:armhf

    - name: Compile
      run: make distclean && make release ARMCXX=output/host/bin/arm-buildroot-linux-uclibcgnueabihf-c++

    - name: Release Candidate
      uses: marvinpinto/action-automatic-releases@latest
      if: env.isNightly == 'true'
      with:
        automatic_release_tag: latest-rc
        files: onvif_srvd
        prerelease: true
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        title: latest-rc

    - name: Release
      uses: marvinpinto/action-automatic-releases@latest
      if: env.isFinalRelease == 'true'
      with:
        automatic_release_tag: stable
        files: onvif_srvd
        prerelease: false
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        title: stable
